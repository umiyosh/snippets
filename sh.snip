snippet bash
    #!/usr/bin/env bash
    source ~/lib/lib001.sh

snippet tmpf
    tmpf -i;${1:tmpvarname}=$tmpff
    ${2}

snippet who
    while ${1:condition} ;do ${2:statements} ;done

snippet here
    cat <<HERE
    ${1:statements}
    HERE

snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi

snippet ife
	if [[ ${1:condition} ]]; then
		${2:#statements}
    else
        ${3:$statements}
	fi

snippet ifel
	if   [[ ${1:condition} ]]; then
		${2:#statements}
    elif [[ ${3:condition} ]]; then
        ${4:$statements}
	fi

snippet ifee
	if   [[ ${1:condition} ]]; then
		${2:#statements}
    elif [[ ${3:condition} ]]; then
        ${4:statements}
    else
        ${5:statements}
	fi

snippet el
	else
    	${1:#statements}


snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}


snippet for
	for ${1:i} in ${2:words}; do
		${3:#statements}
	done


snippet wh
abbr while
	while ${1:condition} ; do
		${2:#statements}
	done


snippet until
	until ${1:condition} ; do
		${2:#statements}
	done


snippet case
	case ${1:word} in
		${2:pattern} )
			${3}
            ;;
	esac


snippet h
	<<${1}
		${2}


snippet env
	#!/usr/bin/env ${1}


snippet tmp
	${1:TMPFILE}="mktemp -t ${2:untitled}"
	trap "rm -f '$${1}'" 0               # EXIT
	trap "rm -f '$${1}'; exit 1" 2       # INT
	trap "rm -f '$${1}'; exit 1" 1 15    # HUP TERM
    ${0}


snippet header
	###############################################################################
	# 名      称 ：${1:name}
	# 機      能 ：${2:function}
	# 備      考 ：${3:remarks}
	# 制      限 ：${4:restrictions}
	# TODO       ：${5:TODO}
	# 作成年月日 ：${6:date}
	###############################################################################

snippet func
    function ${1:function_name}()
    {
        ${2:proc}
    }


snippet getopt
    #${1:option parse}
    if [[ -z ${1} ]]
    then
            printf "Usage: %s: ${2:usage options} \n" $0
            exit 2
    fi

    OPTIND=''
    listFLG="0"

    while getopts "${3:option c:m:d:l}" name
    do
        case $name in
        ${4:opiton} )
            ${5:optvar}=$OPTARG;;
         * )
            printf "Usage: %s:${6:usage options} \n" $0
            exit 2
        esac
    done
